use egg_matching::ematch;

use std::time::Duration;

fn test(a: &str, pat: &str) {
    println!("Matching {} against {}", a, pat);
    let substs = ematch(a, pat, Duration::from_secs(5));
    println!("Found {} substitutions:", substs.len());
    for subst in &substs {
        for (k, v) in subst {
            print!("{} -> {}, ", k, v);
        }
        println!("")
    }
}


fn main() {
    test("(+ 1 2)", "(* ?k (+ ?x ?y))");
    test("(+ 1 2)", "(* (+ ?i1 ?j1) (+ ?i2 ?j2))");
    test("(sqrt (+ (^ b 2) 81))", "(sqrt (+ (^ ?u1 2) (^ ?u2 2)))");
    test("(* (* (* b c) (+ (^ b 2) (^ c 2))) (sqrt (+ (^ b 2) 1)))", "(* ?k (sqrt (+ (^ ?u1 2) (^ ?u2 2))))");
    test("(* (* (* (* b c) (+ (^ b 2) (^ c 2))) (sqrt (+ (^ b 2) 1))) (sqrt (+ (^ c 2) 1)))", "(+ (* (* ?k (sqrt (+ (^ ?u1 2) (^ ?u2 2)))) (sqrt (+ (^ ?v1 2) (^ ?v2 2)))) ?l)");
    test("(+ (- (+ (+ (/ (* 2 (+ (* a b) 1)) (^ (+ a b) 2)) (/ (* 2 (+ (* b c) 1)) (^ (+ b c) 2))) (/ (* 2 (+ (* c a) 1)) (^ (+ c a) 2))) (/ (* (+ 1 (* a b)) 2) (^ (+ a b) 2))) (/ (* (+ 1 (* a b)) (+ (+ (+ (+ (+ (^ a 2) (^ b 2)) (^ c 2)) (* a b)) (* b c)) (* c a))) (^ (+ a b) 2)))", "(+ (* ?k (+ (+ (* (+ (* ?i1 ?u) ?j1) (+ (* ?i2 (^ ?u 2)) ?j2)) (* (+ (* ?i1 ?v) ?j1) (+ (* ?i2 (^ ?v 2)) ?j2))) (* (+ (* ?i1 ?w) ?j1) (+ (* ?i2 (^ ?w 2)) ?j2)))) ?l)");
    test("(* (/ b c) (/ c b))", "(+ (* ?u1 ?u2) ?l)");
    test("(+ (- (+ (+ (/ (* 2 (+ (* a b) 1)) (^ (+ a b) 2)) (/ (* 2 (+ (* b c) 1)) (^ (+ b c) 2))) (/ (* 2 (+ (* c a) 1)) (^ (+ c a) 2))) (/ (* (+ 1 (* a b)) 2) (^ (+ a b) 2))) (/ (* (+ 1 (* a b)) (+ (+ (+ (+ (+ (^ a 2) (^ b 2)) (^ c 2)) (* a b)) (* b c)) (* c a))) (^ (+ a b) 2)))", "(+ (* ?k (+ (+ (* (+ (* ?i1 ?u) ?j1) (+ (* ?i2 (^ ?u 2)) ?j2)) (* (+ (* ?i1 ?v) ?j1) (+ (* ?i2 (^ ?v 2)) ?j2))) (* (+ (* ?i1 ?w) ?j1) (+ (* ?i2 (^ ?w 2)) ?j2)))) ?l)");
    test("(* (* (* (* b c) (+ (^ b 2) (^ c 2))) (sqrt (+ (^ b 2) 1))) (sqrt (+ (^ c 2) 1)))", "(+ (* (* ?k (sqrt (+ (^ ?u1 2) (^ ?u2 2)))) (sqrt (+ (^ ?v1 2) (^ ?v2 2)))) ?l)");
    test("(+ (+ (+ (* (* (* a b) c) (^ d 2)) (* (* (* a b) d) (^ c 2))) (* (* (* a c) d) (^ b 2))) (* (* (* b c) d) (^ a 2)))", "(+ (* ?k (+ (+ (+ (* (* (* (^ ?u1 ?p) ?u2) ?u3) ?u4) (* (* (* (^ ?u2 ?p) ?u3) ?u4) ?u1)) (* (* (* (^ ?u3 ?p) ?u4) ?u1) ?u2)) (* (* (* (^ ?u4 ?p) ?u1) ?u2) ?u3))) ?l)");
    test("(+ (+ (+ (* (* (* (^ a 1) (^ b 1)) (^ c 1)) (^ d 2)) (* (* (* (^ a 1) (^ b 1)) (^ d 1)) (^ c 2))) (* (* (* (^ a 1) (^ c 1)) (^ d 1)) (^ b 2))) (* (* (* (^ b 1) (^ c 1)) (^ d 1)) (^ a 2)))", "(+ (+ (+ (+ (* (* (* (^ ?u1 ?p) (^ ?u2 1)) (^ ?u3 1)) (^ ?u4 1)) (* (* (* (^ ?u2 ?p) (^ ?u3 1)) (^ ?u4 1)) (^ ?u1 1))) (* (* (* (^ ?u3 ?p) (^ ?u4 1)) (^ ?u1 1)) (^ ?u2 1))) (* (* (* (^ ?u4 ?p) (^ ?u1 1)) (^ ?u2 1)) (^ ?u3 1))) ?l)");
    test("(+ (+ (+ (+ (+ (* (* 3 c) (^ b 2)) (* (* 3 c) (^ a 2))) (* (* 3 b) (^ c 2))) (* (* 3 b) (^ a 2))) (* (* 3 a) (^ c 2))) (* (* 3 a) (^ b 2)))", "(+ (* ?k (+ (* ?i1 ?u) (* ?i2 ?v))) ?l)");
    test("(+ (+ (+ (* (* (* (* 4 (^ a 4)) (^ b 2)) c) d) (* (* (* (* 4 a) (^ b 4)) (^ c 2)) d)) (* (* (* (* 4 a) b) (^ c 4)) (^ d 2))) (* (* (* (* 4 (^ a 2)) b) c) (^ d 4)))", "(+ (* ?k (+ (+ (+ (* (* (* (^ ?u1 ?p) (^ ?u2 ?q)) ?u3) ?u4) (* (* (* (^ ?u2 ?p) (^ ?u3 ?q)) ?u4) ?u1)) (* (* (* (^ ?u3 ?p) (^ ?u4 ?q)) ?u1) ?u2)) (* (* (* (^ ?u4 ?p) (^ ?u1 ?q)) ?u2) ?u3))) ?l)");
    test("(+ (+ (+ (+ (+ (+ (+ (+ (* (* 7 (^ b 3)) (^ c 3)) (* (* 7 (^ a 3)) (^ c 3))) (* (* 7 (^ a 3)) (^ b 3))) (* (* 5 (^ b 4)) (^ c 2))) (* (* 5 (^ b 2)) (^ c 4))) (* (* 5 (^ a 4)) (^ c 2))) (* (* 5 (^ a 4)) (^ b 2))) (* (* 5 (^ a 2)) (^ c 4))) (* (* 5 (^ a 2)) (^ b 4)))", "(+ (* ?k (+ (+ (* (+ (* ?i1 ?u) ?j1) (+ (* ?i2 ?u) ?j2)) (* (+ (* ?i1 ?v) ?j1) (+ (* ?i2 ?v) ?j2))) (* (+ (* ?i1 ?w) ?j1) (+ (* ?i2 ?w) ?j2)))) ?l)");
    test("(+ (+ (+ (+ (+ (+ (+ (+ (* (* 7 (^ b 3)) (^ c 3)) (* (* 7 (^ a 3)) (^ c 3))) (* (* 7 (^ a 3)) (^ b 3))) (* (* 5 (^ b 4)) (^ c 2))) (* (* 5 (^ b 2)) (^ c 4))) (* (* 5 (^ a 4)) (^ c 2))) (* (* 5 (^ a 4)) (^ b 2))) (* (* 5 (^ a 2)) (^ c 4))) (* (* 5 (^ a 2)) (^ b 4)))", "(+ (* ?k (+ (+ (* (+ (* ?i1 ?u) ?j1) (+ (* ?i2 ?u) ?j2)) (* (+ (* ?i1 ?v) ?j1) (+ (* ?i2 ?v) ?j2))) (* (+ (* ?i1 ?w) ?j1) (+ (* ?i2 ?w) ?j2)))) ?l)");
    test("(+ (+ (+ (+ (+ (+ (+ (+ (* (* 7 (^ b 3)) (^ c 3)) (* (* 7 (^ a 3)) (^ c 3))) (* (* 7 (^ a 3)) (^ b 3))) (* (* 5 (^ b 4)) (^ c 2))) (* (* 5 (^ b 2)) (^ c 4))) (* (* 5 (^ a 4)) (^ c 2))) (* (* 5 (^ a 4)) (^ b 2))) (* (* 5 (^ a 2)) (^ c 4))) (* (* 5 (^ a 2)) (^ b 4)))", "(+ (* ?k (+ (+ (+ (* (* (* (^ ?u1 ?p) (^ ?u2 ?q)) ?u3) ?u4) (* (* (* (^ ?u2 ?p) (^ ?u3 ?q)) ?u4) ?u1)) (* (* (* (^ ?u3 ?p) (^ ?u4 ?q)) ?u1) ?u2)) (* (* (* (^ ?u4 ?p) (^ ?u1 ?q)) ?u2) ?u3))) ?l)");
    test("(+ (+ (+ (+ (+ (+ (* (* a b) c) (* a b)) (* a c)) a) (* b c)) b) c)", "(+ (* ?k (+ ?u ?v)) ?l)");
    test("(+ (+ (+ (+ (+ (+ (+ (+ (+ (* (* 2 a) b) (* (* 2 a) c)) (* (* 2 a) d)) (* (* 2 b) c)) (* (* 2 b) d)) (* (* 2 c) d)) (/ 1 (^ a 2))) (/ 1 (^ b 2))) (/ 1 (^ c 2))) (/ 1 (^ d 2)))", "(+ (* (* ?k (+ (+ ?u ?v) ?w)) (+ (+ (/ 1 (^ ?u ?p)) (/ 1 (^ ?v ?p))) (/ 1 (^ ?w ?p)))) ?l)");
    test("(* (+ (+ (+ 12 (* (* 2 a) b)) (* (* 2 a) c)) (* (* 2 b) c)) (+ (+ (+ (+ (+ (* a (^ b 2)) (* a (^ c 2))) (* b (^ a 2))) (* b (^ c 2))) (* c (^ a 2))) (* c (^ b 2))))", "(+ (* ?k (+ (+ (+ (* (^ ?u1 ?p) (^ ?u2 ?q)) (* (^ ?u2 ?p) (^ ?u3 ?q))) (* (^ ?u3 ?p) (^ ?u4 ?q))) (* (^ ?u4 ?p) (^ ?u1 ?q)))) ?l)");
    test("(* (+ (+ (+ 12 (* (* 2 a) b)) (* (* 2 a) c)) (* (* 2 b) c)) (+ (+ (+ (+ (+ (* a (^ b 2)) (* a (^ c 2))) (* b (^ a 2))) (* b (^ c 2))) (* c (^ a 2))) (* c (^ b 2))))", "(+ (* ?k (+ (+ (+ (* (* (^ ?u1 ?p) (^ ?u2 ?q)) (^ ?u3 ?r)) (* (* (^ ?u2 ?p) (^ ?u3 ?q)) (^ ?u4 ?r))) (* (* (^ ?u3 ?p) (^ ?u4 ?q)) (^ ?u1 ?r))) (* (* (^ ?u4 ?p) (^ ?u1 ?q)) (^ ?u2 ?r)))) ?l)");
    test("(/ (^ (+ (+ (+ (/ (* 5 (^ a 3)) 2) (/ (* 5 (^ b 3)) 2)) (/ (* 5 (^ c 3)) 2)) (/ (* (* (* 3 a) b) c) 2)) 2) (+ (+ a b) c))(+ (+ (/ (* (^ (+ (* 5 (^ c 2)) (* a b)) 2) (+ (+ (+ (/ (^ a 3) 4) (/ (^ b 3) 4)) (/ (^ c 3) 4)) (/ (* (* a b) c) 4))) (* (+ a c) (+ b c))) (/ (* (^ (+ (* 5 (^ b 2)) (* a c)) 2) (+ (+ (+ (/ (^ a 3) 4) (/ (^ b 3) 4)) (/ (^ c 3) 4)) (/ (* (* a b) c) 4))) (* (+ a b) (+ b c)))) (/ (* (^ (+ (* 5 (^ a 2)) (* b c)) 2) (+ (+ (+ (/ (^ a 3) 4) (/ (^ b 3) 4)) (/ (^ c 3) 4)) (/ (* (* a b) c) 4))) (* (+ a b) (+ a c))))", "(+ (* ?k (+ (+ (+ (* (* (* (^ ?u1 ?p) (^ ?u2 ?q)) (^ ?u3 ?r)) ?u4) (* (* (* (^ ?u2 ?p) (^ ?u3 ?q)) (^ ?u4 ?r)) ?u1)) (* (* (* (^ ?u3 ?p) (^ ?u4 ?q)) (^ ?u1 ?r)) ?u2)) (* (* (* (^ ?u4 ?p) (^ ?u1 ?q)) (^ ?u2 ?r)) ?u3))) ?l)");
    test("(+ (+ (/ (^ (+ (* 5 (^ a 2)) (* b c)) 2) (* (+ a b) (+ a c))) (/ (^ (+ (* 5 (^ b 2)) (* a c)) 2) (* (+ a b) (+ b c)))) (/ (^ (+ (* 5 (^ c 2)) (* a b)) 2) (* (+ a c) (+ b c))))", "(+ (* ?k (+ (+ (/ (^ ?u1 2) ?v1) (/ (^ ?u2 2) ?v2)) (/ (^ ?u3 2) ?v3))) ?l)");
    test("(* 3 (+ (+ (+ (+ (+ (+ a b) c) (* a b)) (* a c)) (* b c)) (* (* a b) c)))", "(+ (* ?k (+ (+ (+ (+ (+ (* ?u ?v) (* ?v ?w)) (* ?w ?u)) ?u) ?v) ?w)) ?l)");
    test("(+ (+ (+ (* (* 13 (^ a 2)) (^ b 2)) (* (* 15 (^ a 2)) (^ c 2))) (* (* 15 (^ b 2)) (^ c 2))) (* (* (* 3 b) c) (^ a 2)))", "(+ (* ?k (+ (+ (+ (* (* (^ ?u1 ?p) (^ ?u2 ?q)) (^ ?u3 ?r)) (* (* (^ ?u2 ?p) (^ ?u3 ?q)) (^ ?u4 ?r))) (* (* (^ ?u3 ?p) (^ ?u4 ?q)) (^ ?u1 ?r))) (* (* (^ ?u4 ?p) (^ ?u1 ?q)) (^ ?u2 ?r)))) ?l)");
    test("(+ (+ (+ (+ (+ (+ (* 3 a) (* 3 b)) (* 3 c)) (* (* 3 a) b)) (* (* 3 a) c)) (* (* 3 b) c)) (* (* (* 3 a) b) c))", "(+ (* ?k (+ (+ (+ (+ (+ (* ?u ?v) (* ?v ?w)) (* ?w ?u)) ?u) ?v) ?w)) ?l)");
    test("(+ (+ (+ (+ (+ (+ (+ 3 (* 3 a)) (* 3 b)) (* 3 c)) (* (* 3 a) b)) (* (* 3 a) c)) (* (* 3 b) c)) (* (* (* 3 a) b) c))", "(+ (* ?k (+ (+ (+ (+ (+ (* ?u ?v) (* ?v ?w)) (* ?w ?u)) ?u) ?v) ?w)) ?l)");
    test("(+ (+ (+ (* (^ c 2) (^ a 4)) (* (^ b 2) (^ c 4))) (* (^ b 4) (^ a 2))) (* (* (^ b 2) (^ a 2)) (^ c 2)))(+ (+ (+ (+ (sqrt 5) (* (^ c 4) (^ a 2))) (* (* (^ c 2) (^ a 2)) (^ b 2))) (* (^ b 4) (^ c 2))) (* (^ b 2) (^ a 4)))", "(+ (* ?k (+ (+ (+ (* (* (^ ?u1 ?p) (^ ?u2 ?q)) (^ ?u3 ?r)) (* (* (^ ?u2 ?p) (^ ?u3 ?q)) (^ ?u4 ?r))) (* (* (^ ?u3 ?p) (^ ?u4 ?q)) (^ ?u1 ?r))) (* (* (^ ?u4 ?p) (^ ?u1 ?q)) (^ ?u2 ?r)))) ?l)");
    test("(+ (+ (+ (+ (+ (+ (+ (+ (* (* 2 a) (^ b 3)) (* (* 2 a) (^ c 3))) (* (* 2 b) (^ a 3))) (* (* 2 b) (^ c 3))) (* (* 2 c) (^ a 3))) (* (* 2 c) (^ b 3))) (* (* (* 2 a) b) (^ c 2))) (* (* (* 2 a) c) (^ b 2))) (* (* (* 2 b) c) (^ a 2)))", "(+ (* ?k (+ (+ (+ (+ (+ (* (^ ?u 3) ?v) (* (^ ?u 3) ?w)) (* (^ ?v 3) ?u)) (* (^ ?v 3) ?w)) (* (^ ?w 3) ?u)) (* (^ ?w 3) ?v))) ?l)");
    test("(+ (+ (+ (+ (+ (* (* 2 a) (^ b 3)) (* (* 2 a) (^ c 3))) (* (* 2 b) (^ a 3))) (* (* 2 b) (^ c 3))) (* (* 2 c) (^ a 3))) (* (* 2 c) (^ b 3)))", "(+ (* ?k (+ (+ (+ (+ (+ (* (^ ?u 3) ?v) (* (^ ?u 3) ?w)) (* (^ ?v 3) ?u)) (* (^ ?v 3) ?w)) (* (^ ?w 3) ?u)) (* (^ ?w 3) ?v))) ?l)");
    test("(+ (+ (+ (+ (+ (+ (+ (+ (* (* 2 a) (^ b 3)) (* (* 2 a) (^ c 3))) (* (* 2 b) (^ a 3))) (* (* 2 b) (^ c 3))) (* (* 2 c) (^ a 3))) (* (* 2 c) (^ b 3))) (* (* (* 2 a) b) (^ c 2))) (* (* (* 2 a) c) (^ b 2))) (* (* (* 2 b) c) (^ a 2)))", "(+ (* ?k (+ (+ (+ (+ (+ (* ?u (^ ?v 3)) (* ?u (^ ?w 3))) (* ?v (^ ?u 3))) (* ?v (^ ?w 3))) (* ?w (^ ?u 3))) (* ?w (^ ?v 3)))) ?l)");
    test("(+ (+ (+ 21 (* (* (* 3 a) b) (^ c 2))) (* (* (* 3 a) c) (^ b 2))) (* (* (* 3 b) c) (^ a 2)))", "(+ (* ?k (+ (+ (+ (* (* (* (^ ?u1 ?p) (^ ?u2 ?q)) (^ ?u3 ?r)) (^ ?u4 ?s)) (* (* (* (^ ?u2 ?p) (^ ?u3 ?q)) (^ ?u4 ?r)) (^ ?u1 ?s))) (* (* (* (^ ?u3 ?p) (^ ?u4 ?q)) (^ ?u1 ?r)) (^ ?u2 ?s))) (* (* (* (^ ?u4 ?p) (^ ?u1 ?q)) (^ ?u2 ?r)) (^ ?u3 ?s)))) ?l)");
    test("(+ (+ (+ (* 27 (^ c 4)) (* (* (* 54 a) b) (^ c 2))) (* (* 108 c) (+ a b))) (* (* 54 a) b))", "(+ (* ?k (+ (+ (+ (* (* (* (^ ?u1 ?p) (^ ?u2 q)) (^ ?u3 r)) (^ ?u4 s)) (* (* (* (^ ?u2 ?p) (^ ?u3 q)) (^ ?u4 r)) (^ ?u1 s))) (* (* (* (^ ?u3 ?p) (^ ?u4 q)) (^ ?u1 r)) (^ ?u2 s))) (* (* (* (^ ?u4 ?p) (^ ?u1 q)) (^ ?u2 r)) (^ ?u3 s)))) ?l)");
}
