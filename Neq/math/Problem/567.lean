import Mathlib
import Math
import Smt

open Real

set_option maxHeartbeats 600000

set_option linter.unusedVariables false

macro_rules | `($x / $y)   => `(HDiv.hDiv ($x : ℝ) ($y : ℝ))


theorem P1 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) :
  a / b + b / c + c / a ≤ sqrt (a ^ 2 + 1) / sqrt (b ^ 2 + 1) + sqrt (b ^ 2 + 1) / sqrt (c ^ 2 + 1) + sqrt (c ^ 2 + 1) / sqrt (a ^ 2 + 1) := by
  sorry

theorem P2 {a b c d : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (hd : d > 0) :
  0 ≤ (a ^ 2 - b * d) / (b + 2 * c + d) + (b ^ 2 - c * a) / (c + 2 * d + a) + (c ^ 2 - d * b) / (d + 2 * a + b) + (d ^ 2 - a * c) / (a + 2 * b + c) := by
  intro_by_homogeneous a + b + c + d = 4
  llm_frac_apart 0 - ((a ^ 2 - b * d) / (b + 2 * c + d) + (b ^ 2 - c * a) / (c + 2 * d + a) + (c ^ 2 - d * b) / (d + 2 * a + b) + (d ^ 2 - a * c) / (a + 2 * b + c)) = a * c / (a + 2 * b + c) + a * c / (a + c + 2 * d) + b * d / (2 * a + b + d) + b * d / (b + 2 * c + d) - (c ^ 2 / (2 * a + b + d)) - (d ^ 2 / (a + 2 * b + c)) - (b ^ 2 / (a + c + 2 * d)) - (a ^ 2 / (b + 2 * c + d))
  scale AM_GM_square_left_2vars (u := b) (v := d) (k := (1 / ((b + (2 * c)) + d))) (l := ((((a * c) / ((a + (2 * b)) + c)) + ((a * c) / ((a + c) + (2 * d)))) + ((b * d) / (((2 * a) + b) + d)))) (right := a ^ 2 / (b + 2 * c + d) + b ^ 2 / (a + c + 2 * d) + d ^ 2 / (a + 2 * b + c) + c ^ 2 / (2 * a + b + d))
  llm_simplify 1 / (b + 2 * c + d) * (b ^ 2 + d ^ 2) / 2 + a * c / (a + 2 * b + c) + a * c / (a + c + 2 * d) + b * d / (2 * a + b + d) - (a ^ 2 / (b + 2 * c + d) + b ^ 2 / (a + c + 2 * d) + d ^ 2 / (a + 2 * b + c) + c ^ 2 / (2 * a + b + d)) = (b ^ 2 + d ^ 2 - (2 * a ^ 2)) / (2 * (b + 2 * c + d)) + (b * d - (c ^ 2)) / (2 * a + b + d) + (a * c - (d ^ 2)) / (a + 2 * b + c) + (a * c - (b ^ 2)) / (a + c + 2 * d)
  llm_cancel_denom (b ^ 2 + d ^ 2 - 2 * a ^ 2) / (2 * (b + 2 * c + d)) + (b * d - c ^ 2) / (2 * a + b + d) + (a * c - d ^ 2) / (a + 2 * b + c) + (a * c - b ^ 2) / (a + c + 2 * d) - (0) = ((b ^ 2 + d ^ 2 - (2 * a ^ 2)) * (2 * a + b + d) * (a + 2 * b + c) * (a + c + 2 * d) + (b * d - (c ^ 2)) * 2 * (b + 2 * c + d) * (a + 2 * b + c) * (a + c + 2 * d) + (a * c - (d ^ 2)) * 2 * (b + 2 * c + d) * (2 * a + b + d) * (a + c + 2 * d) + (a * c - (b ^ 2)) * 2 * (b + 2 * c + d) * (2 * a + b + d) * (a + 2 * b + c)) / (2 * (a + 2 * b + c) * (a + c + 2 * d) * (2 * a + b + d) * (b + 2 * c + d))
  llm_factor (b ^ 2 + d ^ 2 - 2 * a ^ 2) * (2 * a + b + d) * (a + 2 * b + c) * (a + c + 2 * d) + (b * d - c ^ 2) * 2 * (b + 2 * c + d) * (a + 2 * b + c) * (a + c + 2 * d) + (a * c - d ^ 2) * 2 * (b + 2 * c + d) * (2 * a + b + d) * (a + c + 2 * d) + (a * c - b ^ 2) * 2 * (b + 2 * c + d) * (2 * a + b + d) * (a + 2 * b + c) - (0) = 2 * (a * c - (b ^ 2)) * (a + c + 2 * b) * (b + d + 2 * a) * (b + d + 2 * c) + 2 * (b * d - (c ^ 2)) * (a + c + 2 * b) * (a + c + 2 * d) * (b + d + 2 * c) + 2 * (a * c - (d ^ 2)) * (a + c + 2 * d) * (b + d + 2 * a) * (b + d + 2 * c) - ((a + c + 2 * b) * (a + c + 2 * d) * (b + d + 2 * a) * (2 * a ^ 2 - (b ^ 2) - (d ^ 2)))
  closed_by_sos

theorem P3 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (h : a + b + c = 1) :
  a * b / (1 - c ^ 2) + b * c / (1 - a ^ 2) + c * a / (1 - b ^ 2) ≤ 3 / 8 := by
  make_homogeneous a * b / ((a + b + c) ^ 2 - (c ^ 2)) + a * c / ((a + b + c) ^ 2 - (b ^ 2)) + b * c / ((a + b + c) ^ 2 - (a ^ 2)) - (3 / 8) ≤ 0
  llm_frac_together a * b / ((a + b + c) ^ 2 - c ^ 2) + a * c / ((a + b + c) ^ 2 - b ^ 2) + b * c / ((a + b + c) ^ 2 - a ^ 2) - (3 / 8) = a * b / (a ^ 2 + 2 * a * b + 2 * a * c + b ^ 2 + 2 * b * c) + a * c / (a ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c + c ^ 2) + b * c / (2 * a * b + 2 * a * c + b ^ 2 + 2 * b * c + c ^ 2) - (3 / 8)
  llm_cancel_denom (a * b / (a ^ 2 + 2 * a * b + 2 * a * c + b ^ 2 + 2 * b * c) + a * c / (a ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c + c ^ 2) + b * c / (2 * a * b + 2 * a * c + b ^ 2 + 2 * b * c + c ^ 2)) - (3 / 8) = (8 * a * b * (a ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) * (b ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) + 8 * a * c * (a ^ 2 + b ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) * (b ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) + 8 * b * c * (a ^ 2 + b ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) * (a ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) - (3 * (a ^ 2 + b ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) * (a ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) * (b ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c))) / (8 * (a ^ 2 + b ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) * (a ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) * (b ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c))
  llm_mul_expand 8 * a * b * (a ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) * (b ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) + 8 * a * c * (a ^ 2 + b ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) * (b ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) + 8 * b * c * (a ^ 2 + b ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) * (a ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) - (3 * (a ^ 2 + b ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) * (a ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) * (b ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c)) = 14 * a * b ^ 2 * c ^ 3 + 14 * a * b ^ 3 * c ^ 2 + 14 * b * a ^ 2 * c ^ 3 + 14 * b * a ^ 3 * c ^ 2 + 14 * c * a ^ 2 * b ^ 3 + 14 * c * a ^ 3 * b ^ 2 + 66 * a ^ 2 * b ^ 2 * c ^ 2 - (11 * a ^ 2 * b ^ 4) - (11 * a ^ 2 * c ^ 4) - (11 * a ^ 4 * b ^ 2) - (11 * a ^ 4 * c ^ 2) - (11 * b ^ 2 * c ^ 4) - (11 * b ^ 4 * c ^ 2) - (6 * a * b ^ 5) - (6 * a * c ^ 5) - (6 * b * a ^ 5) - (6 * b * c ^ 5) - (6 * c * a ^ 5) - (6 * c * b ^ 5) - (2 * a ^ 3 * b ^ 3) - (2 * a ^ 3 * c ^ 3) - (2 * b ^ 3 * c ^ 3) - (14 * a * b * c ^ 4) - (14 * a * c * b ^ 4) - (14 * b * c * a ^ 4)
  scale Muirhead_Req1_left_3vars (u := c) (v := a) (w := b) (p := 2) (q := 3) (k := 14) (l := (((((14 * a) * (b ^ 3)) * (c ^ 2)) + (((14 * b) * (a ^ 2)) * (c ^ 3))) + ((((14 * c) * (a ^ 3)) * (b ^ 2)) + (((66 * (a ^ 2)) * (b ^ 2)) * (c ^ 2))))) (right := 14 * b * c * a ^ 4 + 14 * a * c * b ^ 4 + 14 * a * b * c ^ 4 + 2 * b ^ 3 * c ^ 3 + 2 * a ^ 3 * c ^ 3 + 2 * a ^ 3 * b ^ 3 + 6 * c * b ^ 5 + 6 * c * a ^ 5 + 6 * b * c ^ 5 + 6 * b * a ^ 5 + 6 * a * c ^ 5 + 6 * a * b ^ 5 + 11 * b ^ 4 * c ^ 2 + 11 * b ^ 2 * c ^ 4 + 11 * a ^ 4 * c ^ 2 + 11 * a ^ 4 * b ^ 2 + 11 * a ^ 2 * c ^ 4 + 11 * a ^ 2 * b ^ 4)
  scale Muirhead_Req1_left_3vars (u := b) (v := c) (w := a) (p := 3) (q := 2) (k := 14) (l := ((((66 * (a ^ 2)) * (b ^ 2)) * (c ^ 2)) + (14 * ((((c ^ 3) * (a ^ 3)) + ((a ^ 3) * (b ^ 3))) + ((b ^ 3) * (c ^ 3)))))) (right := 14 * b * c * a ^ 4 + 14 * a * c * b ^ 4 + 14 * a * b * c ^ 4 + 2 * b ^ 3 * c ^ 3 + 2 * a ^ 3 * c ^ 3 + 2 * a ^ 3 * b ^ 3 + 6 * c * b ^ 5 + 6 * c * a ^ 5 + 6 * b * c ^ 5 + 6 * b * a ^ 5 + 6 * a * c ^ 5 + 6 * a * b ^ 5 + 11 * b ^ 4 * c ^ 2 + 11 * b ^ 2 * c ^ 4 + 11 * a ^ 4 * c ^ 2 + 11 * a ^ 4 * b ^ 2 + 11 * a ^ 2 * c ^ 4 + 11 * a ^ 2 * b ^ 4)
  scale Muirhead_Req0_onestep_left_3vars (u := b) (v := a) (w := c) (p := 3) (q := 3) (k := 14) (l := ((14 * ((((b ^ 4) * (c ^ 2)) + ((c ^ 4) * (a ^ 2))) + ((a ^ 4) * (b ^ 2)))) + (((66 * (a ^ 2)) * (b ^ 2)) * (c ^ 2)))) (right := 14 * b * c * a ^ 4 + 14 * a * c * b ^ 4 + 14 * a * b * c ^ 4 + 2 * b ^ 3 * c ^ 3 + 2 * a ^ 3 * c ^ 3 + 2 * a ^ 3 * b ^ 3 + 6 * c * b ^ 5 + 6 * c * a ^ 5 + 6 * b * c ^ 5 + 6 * b * a ^ 5 + 6 * a * c ^ 5 + 6 * a * b ^ 5 + 11 * b ^ 4 * c ^ 2 + 11 * b ^ 2 * c ^ 4 + 11 * a ^ 4 * c ^ 2 + 11 * a ^ 4 * b ^ 2 + 11 * a ^ 2 * c ^ 4 + 11 * a ^ 2 * b ^ 4)
  scale Muirhead_Req0_onestep_left_3vars (u := a) (v := c) (w := b) (p := 2) (q := 4) (k := 14) (l := ((14 * ((((b ^ 4) * (a ^ 2)) + ((a ^ 4) * (c ^ 2))) + ((c ^ 4) * (b ^ 2)))) + (((66 * (a ^ 2)) * (b ^ 2)) * (c ^ 2)))) (right := 14 * b * c * a ^ 4 + 14 * a * c * b ^ 4 + 14 * a * b * c ^ 4 + 2 * b ^ 3 * c ^ 3 + 2 * a ^ 3 * c ^ 3 + 2 * a ^ 3 * b ^ 3 + 6 * c * b ^ 5 + 6 * c * a ^ 5 + 6 * b * c ^ 5 + 6 * b * a ^ 5 + 6 * a * c ^ 5 + 6 * a * b ^ 5 + 11 * b ^ 4 * c ^ 2 + 11 * b ^ 2 * c ^ 4 + 11 * a ^ 4 * c ^ 2 + 11 * a ^ 4 * b ^ 2 + 11 * a ^ 2 * c ^ 4 + 11 * a ^ 2 * b ^ 4)
  llm_factor 14 * (a ^ 3 * c ^ 3 + c ^ 3 * b ^ 3 + b ^ 3 * a ^ 3) + 14 * (b ^ 4 * a ^ 2 + a ^ 4 * c ^ 2 + c ^ 4 * b ^ 2) + 66 * a ^ 2 * b ^ 2 * c ^ 2 - (14 * b * c * a ^ 4 + 14 * a * c * b ^ 4 + 14 * a * b * c ^ 4 + 2 * b ^ 3 * c ^ 3 + 2 * a ^ 3 * c ^ 3 + 2 * a ^ 3 * b ^ 3 + 6 * c * b ^ 5 + 6 * c * a ^ 5 + 6 * b * c ^ 5 + 6 * b * a ^ 5 + 6 * a * c ^ 5 + 6 * a * b ^ 5 + 11 * b ^ 4 * c ^ 2 + 11 * b ^ 2 * c ^ 4 + 11 * a ^ 4 * c ^ 2 + 11 * a ^ 4 * b ^ 2 + 11 * a ^ 2 * c ^ 4 + 11 * a ^ 2 * b ^ 4) = 3 * a ^ 2 * b ^ 4 + 3 * a ^ 4 * c ^ 2 + 3 * b ^ 2 * c ^ 4 + 12 * a ^ 3 * b ^ 3 + 12 * a ^ 3 * c ^ 3 + 12 * b ^ 3 * c ^ 3 + 66 * a ^ 2 * b ^ 2 * c ^ 2 - (11 * a ^ 2 * c ^ 4) - (11 * a ^ 4 * b ^ 2) - (11 * b ^ 4 * c ^ 2) - (6 * a * b ^ 5) - (6 * a * c ^ 5) - (6 * b * a ^ 5) - (6 * b * c ^ 5) - (6 * c * a ^ 5) - (6 * c * b ^ 5) - (14 * a * b * c ^ 4) - (14 * a * c * b ^ 4) - (14 * b * c * a ^ 4)
  scale Muirhead_Req0_onestep_left_3vars (u := b) (v := a) (w := c) (p := 4) (q := 2) (k := 3) (l := ((((12 * (a ^ 3)) * (b ^ 3)) + ((12 * (a ^ 3)) * (c ^ 3))) + (((12 * (b ^ 3)) * (c ^ 3)) + (((66 * (a ^ 2)) * (b ^ 2)) * (c ^ 2))))) (right := 14 * b * c * a ^ 4 + 14 * a * c * b ^ 4 + 14 * a * b * c ^ 4 + 6 * c * b ^ 5 + 6 * c * a ^ 5 + 6 * b * c ^ 5 + 6 * b * a ^ 5 + 6 * a * c ^ 5 + 6 * a * b ^ 5 + 11 * b ^ 4 * c ^ 2 + 11 * a ^ 4 * b ^ 2 + 11 * a ^ 2 * c ^ 4)
  scale Muirhead_Req0_onestep_left_3vars (u := b) (v := c) (w := a) (p := 3) (q := 3) (k := 12) (l := ((((66 * (a ^ 2)) * (b ^ 2)) * (c ^ 2)) + (3 * ((((b ^ 5) * a) + ((a ^ 5) * c)) + ((c ^ 5) * b))))) (right := 14 * b * c * a ^ 4 + 14 * a * c * b ^ 4 + 14 * a * b * c ^ 4 + 6 * c * b ^ 5 + 6 * c * a ^ 5 + 6 * b * c ^ 5 + 6 * b * a ^ 5 + 6 * a * c ^ 5 + 6 * a * b ^ 5 + 11 * b ^ 4 * c ^ 2 + 11 * a ^ 4 * b ^ 2 + 11 * a ^ 2 * c ^ 4)
  llm_mul_expand 12 * (b ^ 4 * c ^ 2 + c ^ 4 * a ^ 2 + a ^ 4 * b ^ 2) + 66 * a ^ 2 * b ^ 2 * c ^ 2 + 3 * (b ^ 5 * a + a ^ 5 * c + c ^ 5 * b) - (14 * b * c * a ^ 4 + 14 * a * c * b ^ 4 + 14 * a * b * c ^ 4 + 6 * c * b ^ 5 + 6 * c * a ^ 5 + 6 * b * c ^ 5 + 6 * b * a ^ 5 + 6 * a * c ^ 5 + 6 * a * b ^ 5 + 11 * b ^ 4 * c ^ 2 + 11 * a ^ 4 * b ^ 2 + 11 * a ^ 2 * c ^ 4) = a ^ 2 * c ^ 4 + a ^ 4 * b ^ 2 + b ^ 4 * c ^ 2 + 66 * a ^ 2 * b ^ 2 * c ^ 2 - (6 * a * c ^ 5) - (6 * b * a ^ 5) - (6 * c * b ^ 5) - (3 * a * b ^ 5) - (3 * b * c ^ 5) - (3 * c * a ^ 5) - (14 * a * b * c ^ 4) - (14 * a * c * b ^ 4) - (14 * b * c * a ^ 4)
  scale Muirhead_Req0_onestep_left_3vars (u := b) (v := a) (w := c) (p := 2) (q := 4) (k := 1) (l := (((66 * (a ^ 2)) * (b ^ 2)) * (c ^ 2))) (right := 14 * b * c * a ^ 4 + 14 * a * c * b ^ 4 + 14 * a * b * c ^ 4 + 3 * c * a ^ 5 + 3 * b * c ^ 5 + 3 * a * b ^ 5 + 6 * c * b ^ 5 + 6 * b * a ^ 5 + 6 * a * c ^ 5)
  scale Muirhead_Req0_onestep_left_3vars (u := b) (v := a) (w := c) (p := 3) (q := 3) (k := 1) (l := (((66 * (a ^ 2)) * (b ^ 2)) * (c ^ 2))) (right := 14 * b * c * a ^ 4 + 14 * a * c * b ^ 4 + 14 * a * b * c ^ 4 + 3 * c * a ^ 5 + 3 * b * c ^ 5 + 3 * a * b ^ 5 + 6 * c * b ^ 5 + 6 * b * a ^ 5 + 6 * a * c ^ 5)
  scale Muirhead_Req0_onestep_left_3vars (u := b) (v := a) (w := c) (p := 4) (q := 2) (k := 1) (l := (((66 * (a ^ 2)) * (b ^ 2)) * (c ^ 2))) (right := 14 * b * c * a ^ 4 + 14 * a * c * b ^ 4 + 14 * a * b * c ^ 4 + 3 * c * a ^ 5 + 3 * b * c ^ 5 + 3 * a * b ^ 5 + 6 * c * b ^ 5 + 6 * b * a ^ 5 + 6 * a * c ^ 5)
  llm_cancel_factor (b ^ 5 * a + a ^ 5 * c + c ^ 5 * b + 66 * a ^ 2 * b ^ 2 * c ^ 2) - (14 * b * c * a ^ 4 + 14 * a * c * b ^ 4 + 14 * a * b * c ^ 4 + 3 * c * a ^ 5 + 3 * b * c ^ 5 + 3 * a * b ^ 5 + 6 * c * b ^ 5 + 6 * b * a ^ 5 + 6 * a * c ^ 5) = (2) * (33 * a ^ 2 * b ^ 2 * c ^ 2 - (a * b ^ 5) - (b * c ^ 5) - (c * a ^ 5) - (3 * a * c ^ 5) - (3 * b * a ^ 5) - (3 * c * b ^ 5) - (7 * a * b * c ^ 4) - (7 * a * c * b ^ 4) - (7 * b * c * a ^ 4))
  scale AM_GM_normal_right_3vars (u := (((7 * b) * c) * (a ^ 4))) (v := (((7 * a) * c) * (b ^ 4))) (w := (((7 * a) * b) * (c ^ 4))) (k := 1) (l := ((((3 * c) * (b ^ 5)) + ((3 * b) * (a ^ 5))) + ((((3 * a) * (c ^ 5)) + (c * (a ^ 5))) + ((b * (c ^ 5)) + (a * (b ^ 5)))))) (left := 33 * a ^ 2 * b ^ 2 * c ^ 2)
  llm_simplify 33 * a ^ 2 * b ^ 2 * c ^ 2 - (3 * (7 * b * c * a ^ 4 * 7 * a * c * b ^ 4 * 7 * a * b * c ^ 4) ^ (1 / 3) + 3 * c * b ^ 5 + 3 * b * a ^ 5 + 3 * a * c ^ 5 + c * a ^ 5 + b * c ^ 5 + a * b ^ 5) = 12 * a ^ 2 * b ^ 2 * c ^ 2 - (a * b ^ 5) - (b * c ^ 5) - (c * a ^ 5) - (3 * a * c ^ 5) - (3 * b * a ^ 5) - (3 * c * b ^ 5)
  scale weighted_AM_GM_normal_right_3vars (u := (c * (b ^ 5))) (v := (b * (a ^ 5))) (w := (a * (c ^ 5))) (i1 := 3) (i2 := 3) (i3 := 3) (k := 1) (l := ((c * (a ^ 5)) + ((b * (c ^ 5)) + (a * (b ^ 5))))) (left := 12 * a ^ 2 * b ^ 2 * c ^ 2)
  llm_simplify 12 * a ^ 2 * b ^ 2 * c ^ 2 - (9 * ((c * b ^ 5) ^ 3 * (b * a ^ 5) ^ 3 * (a * c ^ 5) ^ 3) ^ (1 / 9) + c * a ^ 5 + b * c ^ 5 + a * b ^ 5) = 3 * a ^ 2 * b ^ 2 * c ^ 2 - (a * b ^ 5) - (b * c ^ 5) - (c * a ^ 5)
  scale AM_GM_normal_right_3vars (u := (c * (a ^ 5))) (v := (b * (c ^ 5))) (w := (a * (b ^ 5))) (k := 1) (l := 0) (left := 3 * a ^ 2 * b ^ 2 * c ^ 2)
  sym_simplify 3 * a ^ 2 * b ^ 2 * c ^ 2  -  3 * (c * a ^ 5 * b * c ^ 5 * a * b ^ 5) ^ (1 / 3) = 0
  try close

theorem P4 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) :
  4 * (a ^ 2 + a * b + b * c) ^ (1 / 3) * (b ^ 2 + b * c + c * a) ^ (1 / 3) * (c ^ 2 + c * a + a * b) ^ (1 / 3) / (a + b + c) ^ 2 ≤ 1 + (a * b ^ 2 + b * c ^ 2 + c * a ^ 2) / ((a * b + b * c + c * a) * (a + b + c)) := by
  intro_by_homogeneous a + b + c = 3
  llm_exp_expand 4 * (a ^ 2 + a * b + b * c) ^ (1 / 3) * (b ^ 2 + b * c + c * a) ^ (1 / 3) * (c ^ 2 + c * a + a * b) ^ (1 / 3) / (a + b + c) ^ 2 - (1 + (a * b ^ 2 + b * c ^ 2 + c * a ^ 2) / ((a * b + b * c + c * a) * (a + b + c))) = 4 * ((a ^ 2 + a * b + b * c) * (b ^ 2 + b * c + c * a) * (c ^ 2 + c * a + a * b)) ^ (1 / ((3))) / ((a + b + c) ^ 2) - (1 + (a * b ^ 2 + b * c ^ 2 + c * a ^ 2) / ((a + b + c) * (a * b + a * c + b * c)))
  llm_frac_apart 4 * ((a ^ 2 + a * b + b * c) * (b ^ 2 + b * c + c * a) * (c ^ 2 + c * a + a * b)) ^ (1 / 3) / (a + b + c) ^ 2 - (1 + (a * b ^ 2 + b * c ^ 2 + c * a ^ 2) / ((a + b + c) * (a * b + a * c + b * c))) = 4 * ((a ^ 2 + a * b + b * c) * (b ^ 2 + a * c + b * c) * (c ^ 2 + a * b + a * c)) ^ (1 / 3) / ((a + b + c) ^ 2) - (1) - (a * b ^ 2 / ((a + b + c) * (a * b + a * c + b * c))) - (b * c ^ 2 / ((a + b + c) * (a * b + a * c + b * c))) - (c * a ^ 2 / ((a + b + c) * (a * b + a * c + b * c)))
  llm_cancel_denom 4 * ((a ^ 2 + a * b + b * c) * (b ^ 2 + a * c + b * c) * (c ^ 2 + a * b + a * c)) ^ (1 / 3) / (a + b + c) ^ 2 - (c * a ^ 2 / ((a + b + c) * (a * b + a * c + b * c)) + b * c ^ 2 / ((a + b + c) * (a * b + a * c + b * c)) + a * b ^ 2 / ((a + b + c) * (a * b + a * c + b * c)) + 1) = (4 * ((a ^ 2 + a * b + b * c) * (b ^ 2 + a * c + b * c) * (c ^ 2 + a * b + a * c)) ^ (1 / ((3))) * (a * b + a * c + b * c) - ((c * a ^ 2 + b * c ^ 2 + a * b ^ 2 + (a + b + c) * (a * b + a * c + b * c)) * (a + b + c))) / ((a + b + c) ^ 2 * (a * b + a * c + b * c))
  scale AM_GM_square_left_2vars (u := ((((((a ^ 2) + (a * b)) + (b * c)) * (((b ^ 2) + (a * c)) + (b * c))) * (((c ^ 2) + (a * b)) + (a * c))) ^ (1 / 3))) (v := (((a * b) + (a * c)) + (b * c))) (k := 4) (l := 0) (right := (c * a ^ 2 + b * c ^ 2 + a * b ^ 2 + (a + b + c) * (a * b + a * c + b * c)) * (a + b + c))
  llm_exp_expand 4 * ((((a ^ 2 + a * b + b * c) * (b ^ 2 + a * c + b * c) * (c ^ 2 + a * b + a * c)) ^ (1 / 3)) ^ 2 + (a * b + a * c + b * c) ^ 2) / 2 - ((c * a ^ 2 + b * c ^ 2 + a * b ^ 2 + (a + b + c) * (a * b + a * c + b * c)) * (a + b + c)) = 4 * ((a * b + a * c + b * c) ^ 2 + (a ^ 2 + a * b + b * c) ^ (2 / (3)) * (b ^ 2 + a * c + b * c) ^ (2 / (3)) * (c ^ 2 + a * b + a * c) ^ (2 / (3))) / (2) - ((c * a ^ 2 + b * c ^ 2 + a * b ^ 2 + (a + b + c) * (a * b + a * c + b * c)) * (a + b + c))
  llm_frac_apart 4 * ((a * b + a * c + b * c) ^ 2 + (a ^ 2 + a * b + b * c) ^ (2 / 3) * (b ^ 2 + a * c + b * c) ^ (2 / 3) * (c ^ 2 + a * b + a * c) ^ (2 / 3)) / 2 - ((c * a ^ 2 + b * c ^ 2 + a * b ^ 2 + (a + b + c) * (a * b + a * c + b * c)) * (a + b + c)) = 2 * (a * b + a * c + b * c) ^ 2 + 2 * (a ^ 2 + a * b + b * c) ^ (2 / (3)) * (b ^ 2 + a * c + b * c) ^ (2 / (3)) * (c ^ 2 + a * b + a * c) ^ (2 / (3)) - ((c * a ^ 2 + b * c ^ 2 + a * b ^ 2) * (a + b + c) + (a + b + c) * (a * b + a * c + b * c) * (a + b + c))
  llm_simplify 2 * (a * b + a * c + b * c) ^ 2 + 2 * (a ^ 2 + a * b + b * c) ^ (2 / 3) * (b ^ 2 + a * c + b * c) ^ (2 / 3) * (c ^ 2 + a * b + a * c) ^ (2 / 3) - ((c * a ^ 2 + b * c ^ 2 + a * b ^ 2) * (a + b + c) + (a + b + c) * (a * b + a * c + b * c) * (a + b + c)) = 2 * ((a ^ 2 + a * b + b * c) * (b ^ 2 + a * c + b * c) * (c ^ 2 + a * b + a * c)) ^ (2 / (3)) + 2 * (a ^ 2 * b ^ 2) + 2 * (a ^ 2 * c ^ 2) + 2 * (b ^ 2 * c ^ 2) + 4 * a * b * a * c + 4 * a * b * b * c + 4 * a * c * b * c - ((a + b + c) ^ 2 * (a * b + a * c + b * c)) - (c * a ^ 2 * a + c * a ^ 2 * b + c * a ^ 2 * c + b * c ^ 2 * a + b * c ^ 2 * b + b * c ^ 2 * c + a * b ^ 2 * a + a * b ^ 2 * b + a * b ^ 2 * c)
  llm_frac_apart 2 * ((a ^ 2 + a * b + b * c) * (b ^ 2 + a * c + b * c) * (c ^ 2 + a * b + a * c)) ^ (2 / 3) + 2 * a ^ 2 * b ^ 2 + 2 * a ^ 2 * c ^ 2 + 2 * b ^ 2 * c ^ 2 + 4 * a * b * a * c + 4 * a * b * b * c + 4 * a * c * b * c - (c * a ^ 2 * a + c * a ^ 2 * b + c * a ^ 2 * c + b * c ^ 2 * a + b * c ^ 2 * b + b * c ^ 2 * c + a * b ^ 2 * a + a * b ^ 2 * b + a * b ^ 2 * c + (a + b + c) ^ 2 * (a * b + a * c + b * c)) = 2 * ((a ^ 2 + a * b + b * c) * (b ^ 2 + a * c + b * c) * (c ^ 2 + a * b + a * c)) ^ (2 / 3) + a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2 + 3 * a * b * c ^ 2 + 3 * a * c * b ^ 2 + 3 * b * c * a ^ 2 - (a * b ^ 3) - (b * c ^ 3) - (c * a ^ 3) - ((a + b + c) ^ 2 * (a * b + a * c + b * c))
  llm_exp_expand 2 * ((a ^ 2 + a * b + b * c) * (b ^ 2 + a * c + b * c) * (c ^ 2 + a * b + a * c)) ^ (2 / 3) + a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2 + 3 * a * b * c ^ 2 + 3 * a * c * b ^ 2 + 3 * b * c * a ^ 2 - ((a + b + c) ^ 2 * (a * b + a * c + b * c) + c * a ^ 3 + b * c ^ 3 + a * b ^ 3) = a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2 + 2 * (a ^ 2 + a * b + b * c) ^ (2 / (3)) * (b ^ 2 + a * c + b * c) ^ (2 / (3)) * (c ^ 2 + a * b + a * c) ^ (2 / (3)) + 3 * a * b * c ^ 2 + 3 * a * c * b ^ 2 + 3 * b * c * a ^ 2 - ((a + b + c) ^ 2 * (a * b + a * c + b * c) + c * a ^ 3 + b * c ^ 3 + a * b ^ 3)
  scale Muirhead_Req0_onestep_left_3vars (u := c) (v := a) (w := b) (p := 2) (q := 2) (k := 1) (l := (((((2 * ((((a ^ 2) + (a * b)) + (b * c)) ^ (2 / 3))) * ((((b ^ 2) + (a * c)) + (b * c)) ^ (2 / 3))) * ((((c ^ 2) + (a * b)) + (a * c)) ^ (2 / 3))) + (((3 * a) * b) * (c ^ 2))) + ((((3 * a) * c) * (b ^ 2)) + (((3 * b) * c) * (a ^ 2))))) (right := (a + b + c) ^ 2 * (a * b + a * c + b * c) + c * a ^ 3 + b * c ^ 3 + a * b ^ 3)
  llm_factor c ^ 3 * a + a ^ 3 * b + b ^ 3 * c + 2 * (a ^ 2 + a * b + b * c) ^ (2 / 3) * (b ^ 2 + a * c + b * c) ^ (2 / 3) * (c ^ 2 + a * b + a * c) ^ (2 / 3) + 3 * a * b * c ^ 2 + 3 * a * c * b ^ 2 + 3 * b * c * a ^ 2 - ((a + b + c) ^ 2 * (a * b + a * c + b * c) + c * a ^ 3 + b * c ^ 3 + a * b ^ 3) = 2 * (a ^ 2 + a * b + b * c) ^ (2 / 3) * (b ^ 2 + a * c + b * c) ^ (2 / 3) * (c ^ 2 + a * b + a * c) ^ (2 / 3) - (2 * a * b ^ 3) - (2 * b * c ^ 3) - (2 * c * a ^ 3) - (2 * a ^ 2 * b ^ 2) - (2 * a ^ 2 * c ^ 2) - (2 * b ^ 2 * c ^ 2) - (2 * a * b * c ^ 2) - (2 * a * c * b ^ 2) - (2 * b * c * a ^ 2)
  llm_simplify 2 * (a ^ 2 + a * b + b * c) ^ (2 / 3) * (b ^ 2 + a * c + b * c) ^ (2 / 3) * (c ^ 2 + a * b + a * c) ^ (2 / 3) - (2 * b * c * a ^ 2 + 2 * a * c * b ^ 2 + 2 * a * b * c ^ 2 + 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 2 + 2 * c * a ^ 3 + 2 * b * c ^ 3 + 2 * a * b ^ 3) = 2 * ((a ^ 2 + a * b + b * c) * (b ^ 2 + a * c + b * c) * (c ^ 2 + a * b + a * c)) ^ (2 / (3)) - (2 * (b * c * a ^ 2 + a * c * b ^ 2 + a * b * c ^ 2) + 2 * (b ^ 2 * c ^ 2 + a ^ 2 * c ^ 2 + a ^ 2 * b ^ 2) + 2 * (c * a ^ 3 + b * c ^ 3 + a * b ^ 3))
  scale Muirhead_Req0_onestep_right_3vars (u := a) (v := c) (w := b) (p := 2) (q := 2) (k := 2) (l := ((2 * ((((b * c) * (a ^ 2)) + ((a * c) * (b ^ 2))) + ((a * b) * (c ^ 2)))) + (2 * (((c * (a ^ 3)) + (b * (c ^ 3))) + (a * (b ^ 3)))))) (left := 2 * ((a ^ 2 + a * b + b * c) * (b ^ 2 + a * c + b * c) * (c ^ 2 + a * b + a * c)) ^ (2 / 3))
  llm_cancel_power 3
  llm_cancel_power 1/3
  llm_factor 2 * ((a ^ 2 + a * b + b * c) * (b ^ 2 + a * c + b * c) * (c ^ 2 + a * b + a * c)) ^ (2 / 3) - (((2 * (a * c ^ 3 + c * b ^ 3 + b * a ^ 3) + 2 * (b * c * a ^ 2 + a * c * b ^ 2 + a * b * c ^ 2) + 2 * (c * a ^ 3 + b * c ^ 3 + a * b ^ 3)) ^ 3) ^ (1 / 3)) = 2 * ((a ^ 2 + a * b + b * c) * (b ^ 2 + a * c + b * c) * (c ^ 2 + a * b + a * c)) ^ (2 / 3) - (2 * ((a ^ 2 + b ^ 2 + c ^ 2) ^ 3 * (a * b + a * c + b * c) ^ 3) ^ (1 / 3))
  llm_cancel_power 3
  llm_exp_expand (2 * ((a ^ 2 + a * b + b * c) * (b ^ 2 + a * c + b * c) * (c ^ 2 + a * b + a * c)) ^ (2 / 3)) ^ 3 - ((2 * ((a ^ 2 + b ^ 2 + c ^ 2) ^ 3 * (a * b + a * c + b * c) ^ 3) ^ (1 / 3)) ^ 3) = 8 * (((a ^ 2 + a * b + b * c) * (b ^ 2 + a * c + b * c) * (c ^ 2 + a * b + a * c)) ^ 2 - ((a ^ 2 + b ^ 2 + c ^ 2) ^ 3 * (a * b + a * c + b * c) ^ 3))
  closed_by_sos

theorem P5 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) :
  9 * (a * b * c) ^ (1 / 3) / (a + b + c) ≤ ((a ^ 2 + b * c) / (b ^ 2 + c ^ 2)) ^ (1 / 3) + ((b ^ 2 + c * a) / (c ^ 2 + a ^ 2)) ^ (1 / 3) + ((c ^ 2 + a * b) / (a ^ 2 + b ^ 2)) ^ (1 / 3) := by
  intro_by_homogeneous a + b + c = 3
  scale AM_GM_normal_right_3vars (u := ((((a ^ 2) + (b * c)) / ((b ^ 2) + (c ^ 2))) ^ (1 / 3))) (v := ((((b ^ 2) + (c * a)) / ((c ^ 2) + (a ^ 2))) ^ (1 / 3))) (w := ((((c ^ 2) + (a * b)) / ((a ^ 2) + (b ^ 2))) ^ (1 / 3))) (k := 1) (l := 0) (left := 9 * (a * b * c) ^ (1 / 3) / (a + b + c))
  llm_cancel_denom (9 * (a * b * c) ^ (1 / 3) / (a + b + c)) - (3 * (((a ^ 2 + b * c) / (b ^ 2 + c ^ 2)) ^ (1 / 3) * ((b ^ 2 + c * a) / (c ^ 2 + a ^ 2)) ^ (1 / 3) * ((c ^ 2 + a * b) / (a ^ 2 + b ^ 2)) ^ (1 / 3)) ^ (1 / 3)) = (9 * (a * b * c) ^ (1 / (3)) - (3 * (((c ^ 2 + a * b) / (a ^ 2 + b ^ 2)) ^ (1 / (3)) * ((b ^ 2 + c * a) / (a ^ 2 + c ^ 2)) ^ (1 / (3)) * ((a ^ 2 + b * c) / (b ^ 2 + c ^ 2)) ^ (1 / (3))) ^ (1 / (3)) * (a + b + c))) / (a + b + c)
  llm_cancel_power 3
  llm_cancel_denom (9 * (a * b * c) ^ (1 / 3)) ^ 3 - ((3 * (((c ^ 2 + a * b) / (a ^ 2 + b ^ 2)) ^ (1 / 3) * ((b ^ 2 + c * a) / (a ^ 2 + c ^ 2)) ^ (1 / 3) * ((a ^ 2 + b * c) / (b ^ 2 + c ^ 2)) ^ (1 / 3)) ^ (1 / 3) * (a + b + c)) ^ 3) = 729 * a * b * c - (27 * ((a ^ 2 + b * c) * (b ^ 2 + c * a) * (c ^ 2 + a * b) / ((a ^ 2 + b ^ 2) * (a ^ 2 + c ^ 2) * (b ^ 2 + c ^ 2))) ^ (3 / ((9))) * (a + b + c) ^ 3)
  llm_simplify 729 * a * b * c - (27 * ((a ^ 2 + b * c) * (b ^ 2 + c * a) * (c ^ 2 + a * b) / ((a ^ 2 + b ^ 2) * (a ^ 2 + c ^ 2) * (b ^ 2 + c ^ 2))) ^ (1 / 3) * (a + b + c) ^ 3) = 27 * -(((a ^ 2 + b * c) * (b ^ 2 + c * a) * (c ^ 2 + a * b) / ((a ^ 2 + b ^ 2) * (a ^ 2 + c ^ 2) * (b ^ 2 + c ^ 2))) ^ (1 / ((3))) * (a + b + c) ^ 3) + 729 * a * b * c
  llm_simplify 27 * -(((a ^ 2 + b * c) * (b ^ 2 + c * a) * (c ^ 2 + a * b) / ((a ^ 2 + b ^ 2) * (a ^ 2 + c ^ 2) * (b ^ 2 + c ^ 2))) ^ (1 / 3) * (a + b + c) ^ 3) + 729 * a * b * c - (0) = 729 * a * b * c - (27 * (a ^ 2 + b * c) ^ (1 / 3) * (b ^ 2 + a * c) ^ (1 / 3) * (c ^ 2 + a * b) ^ (1 / 3) * (a + b + c) ^ 3 / (((a ^ 2 + b ^ 2) ^ (1 / 3)) * ((a ^ 2 + c ^ 2) ^ (1 / 3)) * ((b ^ 2 + c ^ 2) ^ (1 / 3))))
  scale AM_GM_div_cubic_right_3vars (u := (((a ^ 2) + (b ^ 2)) ^ (1 / 3))) (v := (((a ^ 2) + (c ^ 2)) ^ (1 / 3))) (w := (((b ^ 2) + (c ^ 2)) ^ (1 / 3))) (i := 1) (j := 0) (k := ((((27 * (((a ^ 2) + (b * c)) ^ (1 / 3))) * (((b ^ 2) + (a * c)) ^ (1 / 3))) * (((c ^ 2) + (a * b)) ^ (1 / 3))) * (((a + b) + c) ^ 3))) (l := 0) (left := 729 * a * b * c)
  llm_simplify 729 * a * b * c - (27 * (a ^ 2 + b * c) ^ (1 / 3) * (b ^ 2 + a * c) ^ (1 / 3) * (c ^ 2 + a * b) ^ (1 / 3) * (a + b + c) ^ 3 * (1 / ((((a ^ 2 + b ^ 2) ^ (1 / 3)) ^ 3 + ((a ^ 2 + c ^ 2) ^ (1 / 3)) ^ 3 + ((b ^ 2 + c ^ 2) ^ (1 / 3)) ^ 3) / 3))) = 729 * a * b * c - (81 * ((a ^ 2 + b * c) * (b ^ 2 + a * c) * (c ^ 2 + a * b)) ^ (1 / ((3))) * (a + b + c) ^ 3 / (2 * (a ^ 2 + b ^ 2 + c ^ 2)))
  llm_cancel_denom 729 * a * b * c - (81 * ((a ^ 2 + b * c) * (b ^ 2 + a * c) * (c ^ 2 + a * b)) ^ (1 / 3) * (a + b + c) ^ 3 / (2 * (a ^ 2 + b ^ 2 + c ^ 2))) = (729 * a * b * c * 2 * (a ^ 2 + b ^ 2 + c ^ 2) - (81 * ((a ^ 2 + b * c) * (b ^ 2 + a * c) * (c ^ 2 + a * b)) ^ (1 / ((3))) * (a + b + c) ^ 3)) / (2 * (a ^ 2 + b ^ 2 + c ^ 2))
  llm_exp_expand 729 * a * b * c * 2 * (a ^ 2 + b ^ 2 + c ^ 2) - (81 * ((a ^ 2 + b * c) * (b ^ 2 + a * c) * (c ^ 2 + a * b)) ^ (1 / 3) * (a + b + c) ^ 3) = 1458 * a * b * c * (a ^ 2 + b ^ 2 + c ^ 2) - (81 * (a ^ 2 + b * c) ^ (1 / ((3))) * (b ^ 2 + a * c) ^ (1 / ((3))) * (c ^ 2 + a * b) ^ (1 / ((3))) * (a + b + c) ^ 3)
  llm_cancel_power 3
  closed_by_sos

theorem P6 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (h : a * b + b * c + c * a > 0) :
  2 / (a * b + b * c + c * a) ≤ 1 / (2 * a ^ 2 + b * c) + 1 / (2 * b ^ 2 + c * a) + 1 / (2 * c ^ 2 + a * b) := by
  intro_by_homogeneous a + b + c = 3
  llm_cancel_factor (2 / (a * b + b * c + c * a)) - (1 / (2 * a ^ 2 + b * c) + 1 / (2 * b ^ 2 + c * a) + 1 / (2 * c ^ 2 + a * b)) = (1 / (2 * a ^ 2 + b * c)) * (1 / (a * c + 2 * b ^ 2)) * (1 / (a * b + 2 * c ^ 2)) * (1 / (a * b + a * c + b * c)) * (4 * a ^ 3 * b ^ 3 + 4 * a ^ 3 * c ^ 3 + 4 * b ^ 3 * c ^ 3 + 15 * a ^ 2 * b ^ 2 * c ^ 2 - (2 * a ^ 2 * b ^ 4) - (2 * a ^ 2 * c ^ 4) - (2 * a ^ 4 * b ^ 2) - (2 * a ^ 4 * c ^ 2) - (2 * b ^ 2 * c ^ 4) - (2 * b ^ 4 * c ^ 2) - (7 * a * b ^ 2 * c ^ 3) - (7 * a * b ^ 3 * c ^ 2) - (7 * b * a ^ 2 * c ^ 3) - (7 * b * a ^ 3 * c ^ 2) - (7 * c * a ^ 2 * b ^ 3) - (7 * c * a ^ 3 * b ^ 2))
  scale AM_GM_normal_right_2vars (u := (((((7 * c) * (a ^ 3)) * (b ^ 2)) + (((7 * c) * (a ^ 2)) * (b ^ 3))) + (((7 * b) * (a ^ 3)) * (c ^ 2)))) (v := ((((7 * b) * (a ^ 2)) * (c ^ 3)) + ((((7 * a) * (b ^ 3)) * (c ^ 2)) + (((7 * a) * (b ^ 2)) * (c ^ 3))))) (k := 1) (l := ((((2 * (b ^ 4)) * (c ^ 2)) + ((2 * (b ^ 2)) * (c ^ 4))) + ((((2 * (a ^ 4)) * (c ^ 2)) + ((2 * (a ^ 4)) * (b ^ 2))) + (((2 * (a ^ 2)) * (c ^ 4)) + ((2 * (a ^ 2)) * (b ^ 4)))))) (left := 4 * a ^ 3 * b ^ 3 + 4 * a ^ 3 * c ^ 3 + 4 * b ^ 3 * c ^ 3 + 15 * a ^ 2 * b ^ 2 * c ^ 2)
  llm_factor 4 * a ^ 3 * b ^ 3 + 4 * a ^ 3 * c ^ 3 + 4 * b ^ 3 * c ^ 3 + 15 * a ^ 2 * b ^ 2 * c ^ 2 - (2 * sqrt((7 * c * a ^ 3 * b ^ 2 + 7 * c * a ^ 2 * b ^ 3 + 7 * b * a ^ 3 * c ^ 2) * (7 * b * a ^ 2 * c ^ 3 + 7 * a * b ^ 3 * c ^ 2 + 7 * a * b ^ 2 * c ^ 3)) + 2 * b ^ 4 * c ^ 2 + 2 * b ^ 2 * c ^ 4 + 2 * a ^ 4 * c ^ 2 + 2 * a ^ 4 * b ^ 2 + 2 * a ^ 2 * c ^ 4 + 2 * a ^ 2 * b ^ 4) = 4 * a ^ 3 * b ^ 3 + 4 * a ^ 3 * c ^ 3 + 4 * b ^ 3 * c ^ 3 + 15 * a ^ 2 * b ^ 2 * c ^ 2 - (14 * sqrt (a ^ 3 * b ^ 2 * c ^ 3 * (b ^ 2 + a * b + a * c) * (b ^ 2 + a * c + b * c))) - (2 * a ^ 2 * b ^ 4) - (2 * a ^ 2 * c ^ 4) - (2 * a ^ 4 * b ^ 2) - (2 * a ^ 4 * c ^ 2) - (2 * b ^ 2 * c ^ 4) - (2 * b ^ 4 * c ^ 2)
  scale AM_GM_normal_right_2vars (u := ((2 * (b ^ 4)) * (c ^ 2))) (v := ((2 * (b ^ 2)) * (c ^ 4))) (k := 1) (l := (((2 * (a ^ 4)) * (c ^ 2)) + ((((2 * (a ^ 4)) * (b ^ 2)) + ((2 * (a ^ 2)) * (c ^ 4))) + (((2 * (a ^ 2)) * (b ^ 4)) + (14 * sqrt ((((((a ^ 3) * (b ^ 2)) * (c ^ 3)) * (((b ^ 2) + (a * b)) + (a * c))) * (((b ^ 2) + (a * c)) + (b * c))))))))) (left := 4 * a ^ 3 * b ^ 3 + 4 * a ^ 3 * c ^ 3 + 4 * b ^ 3 * c ^ 3 + 15 * a ^ 2 * b ^ 2 * c ^ 2)
  llm_simplify 4 * a ^ 3 * b ^ 3 + 4 * a ^ 3 * c ^ 3 + 4 * b ^ 3 * c ^ 3 + 15 * a ^ 2 * b ^ 2 * c ^ 2 - (2 * sqrt(2 * b ^ 4 * c ^ 2 * 2 * b ^ 2 * c ^ 4) + 2 * a ^ 4 * c ^ 2 + 2 * a ^ 4 * b ^ 2 + 2 * a ^ 2 * c ^ 4 + 2 * a ^ 2 * b ^ 4 + 14 * sqrt(a ^ 3 * b ^ 2 * c ^ 3 * (b ^ 2 + a * b + a * c) * (b ^ 2 + a * c + b * c))) = 4 * a ^ 3 * b ^ 3 + 4 * a ^ 3 * c ^ 3 + 15 * a ^ 2 * b ^ 2 * c ^ 2 - (2 * a ^ 2 * b ^ 4) - (2 * a ^ 2 * c ^ 4) - (2 * a ^ 4 * b ^ 2) - (2 * a ^ 4 * c ^ 2) - (14 * b * a ^ (3 / 2) * c ^ (3 / 2) * sqrt (b ^ 4 + a * b ^ 3 + c * b ^ 3 + a ^ 2 * c ^ 2 + a * b * c ^ 2 + b * c * a ^ 2 + 3 * a * c * b ^ 2))
  llm_factor 4 * a ^ 3 * b ^ 3 + 4 * a ^ 3 * c ^ 3 + 15 * a ^ 2 * b ^ 2 * c ^ 2 - (14 * b * a ^ (3 / 2) * c ^ (3 / 2) * sqrt(b ^ 4 + a * b ^ 3 + c * b ^ 3 + a ^ 2 * c ^ 2 + a * b * c ^ 2 + b * c * a ^ 2 + 3 * a * c * b ^ 2) + 2 * a ^ 4 * c ^ 2 + 2 * a ^ 4 * b ^ 2 + 2 * a ^ 2 * c ^ 4 + 2 * a ^ 2 * b ^ 4) = 4 * a ^ 3 * b ^ 3 + 4 * a ^ 3 * c ^ 3 + 15 * a ^ 2 * b ^ 2 * c ^ 2 - (2 * a ^ 2 * b ^ 4) - (2 * a ^ 2 * c ^ 4) - (2 * a ^ 4 * b ^ 2) - (2 * a ^ 4 * c ^ 2) - (14 * b * a ^ (3 / 2) * c ^ (3 / 2) * sqrt ((b ^ 2 + a * b + a * c) * (b ^ 2 + a * c + b * c)))
  llm_exp_expand 4 * a ^ 3 * b ^ 3 + 4 * a ^ 3 * c ^ 3 + 15 * a ^ 2 * b ^ 2 * c ^ 2 - (14 * b * a ^ (3 / 2) * c ^ (3 / 2) * sqrt((b ^ 2 + a * b + a * c) * (b ^ 2 + a * c + b * c)) + 2 * a ^ 4 * c ^ 2 + 2 * a ^ 4 * b ^ 2 + 2 * a ^ 2 * c ^ 4 + 2 * a ^ 2 * b ^ 4) = 4 * a ^ 3 * b ^ 3 + 4 * a ^ 3 * c ^ 3 + 15 * a ^ 2 * b ^ 2 * c ^ 2 - (2 * a ^ 2 * b ^ 4) - (2 * a ^ 2 * c ^ 4) - (2 * a ^ 4 * b ^ 2) - (2 * a ^ 4 * c ^ 2) - (14 * b * a ^ (3 / 2) * c ^ (3 / 2) * sqrt (b ^ 2 + a * b + a * c) * sqrt (b ^ 2 + a * c + b * c))
  scale Holder_2R_right_2vars (u1 := (b ^ 2)) (u2 := (a * c)) (u3 := (a * b)) (v1 := (a * c)) (v2 := (b ^ 2)) (v3 := (b * c)) (r1 := (1 / 2)) (r2 := (1 / 2)) (k := (((14 * b) * (a ^ (3 / 2))) * (c ^ (3 / 2)))) (l := ((((2 * (a ^ 4)) * (c ^ 2)) + ((2 * (a ^ 4)) * (b ^ 2))) + (((2 * (a ^ 2)) * (c ^ 4)) + ((2 * (a ^ 2)) * (b ^ 4))))) (left := 4 * a ^ 3 * b ^ 3 + 4 * a ^ 3 * c ^ 3 + 15 * a ^ 2 * b ^ 2 * c ^ 2)
  llm_simplify 4 * a ^ 3 * b ^ 3 + 4 * a ^ 3 * c ^ 3 + 15 * a ^ 2 * b ^ 2 * c ^ 2 - (14 * b * a ^ (3 / 2) * c ^ (3 / 2) * ((b ^ 2) ^ (1 / 2) * (a * c) ^ (1 / 2) + (a * c) ^ (1 / 2) * (b ^ 2) ^ (1 / 2) + (a * b) ^ (1 / 2) * (b * c) ^ (1 / 2)) + 2 * a ^ 4 * c ^ 2 + 2 * a ^ 4 * b ^ 2 + 2 * a ^ 2 * c ^ 4 + 2 * a ^ 2 * b ^ 4) = a ^ 2 * (4 * a * b ^ 3 + 4 * a * c ^ 3 - (2 * b ^ 4) - (2 * c ^ 4) - (27 * b ^ 2 * c ^ 2) - (2 * a ^ 2 * b ^ 2) - (2 * a ^ 2 * c ^ 2))
  llm_cancel_factor (a ^ 2 * (4 * a * b ^ 3 + 4 * a * c ^ 3 - 2 * b ^ 4 - 2 * c ^ 4 - 27 * b ^ 2 * c ^ 2 - 2 * a ^ 2 * b ^ 2 - 2 * a ^ 2 * c ^ 2)) - (0) = (a ^ 2) * (4 * a * b ^ 3 + 4 * a * c ^ 3 - (2 * b ^ 4) - (2 * c ^ 4) - (27 * b ^ 2 * c ^ 2) - (2 * a ^ 2 * b ^ 2) - (2 * a ^ 2 * c ^ 2))
  scale AM_GM_square_right_2vars (u := (a * c)) (v := (c ^ 2)) (k := 2) (l := ((((2 * (a ^ 2)) * (b ^ 2)) + ((27 * (b ^ 2)) * (c ^ 2))) + (2 * (b ^ 4)))) (left := 4 * a * b ^ 3 + 4 * a * c ^ 3)
  scale AM_GM_square_right_2vars (u := (a * b)) (v := (b ^ 2)) (k := 2) (l := (((27 * (b ^ 2)) * (c ^ 2)) + (((4 * a) * c) * (c ^ 2)))) (left := 4 * a * b ^ 3 + 4 * a * c ^ 3)
  try close

theorem P7 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (h : a * b + b * c + c * a > 0) :
  12 / ((a + b + c) ^ 2) ≤ 1 / (2 * a ^ 2 + b * c) + 1 / (2 * b ^ 2 + c * a) + 1 / (2 * c ^ 2 + a * b) + 1 / (a * b + b * c + c * a) := by
  intro_by_homogeneous a + b + c = 3
  llm_cancel_denom (12 / (a + b + c) ^ 2) - (1 / (2 * a ^ 2 + b * c) + 1 / (2 * b ^ 2 + c * a) + 1 / (2 * c ^ 2 + a * b) + 1 / (a * b + b * c + c * a)) = (12 * (2 * a ^ 2 + b * c) * (2 * b ^ 2 + a * c) * (2 * c ^ 2 + a * b) * (a * b + a * c + b * c) - ((a + b + c) ^ 2 * ((2 * a ^ 2 + b * c) * (2 * b ^ 2 + a * c) * (2 * c ^ 2 + a * b) + (2 * a ^ 2 + b * c) * (2 * b ^ 2 + a * c) * (a * b + a * c + b * c) + (2 * a ^ 2 + b * c) * (2 * c ^ 2 + a * b) * (a * b + a * c + b * c) + (2 * b ^ 2 + a * c) * (2 * c ^ 2 + a * b) * (a * b + a * c + b * c)))) / ((a + b + c) ^ 2 * (2 * a ^ 2 + b * c) * (2 * b ^ 2 + a * c) * (2 * c ^ 2 + a * b) * (a * b + a * c + b * c))
  closed_by_sos

theorem P8 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (h : 16 * (a + b + c) ≥ 1 / a + 1 / b + 1 / c) :
  (1 / (a + b + sqrt (2 * (a + c))) ^ 3 + 1 / (b + c + sqrt (2 * (b + a))) ^ 3 + 1 / (c + a + sqrt (2 * (c + b))) ^ 3) ≤ 8 / 9 := by
  sorry

theorem P9 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (h : a * b * c = 1) :
  sqrt (a * b + b * c + c * a) ≤ (a ^ 3 + 1) / sqrt (a ^ 4 + b + c) + (b ^ 3 + 1) / sqrt (b ^ 4 + c + a) + (c ^ 3 + 1) / sqrt (c ^ 4 + a + b) := by
  sorry

theorem P10 {a b c : ℝ} (ha : a ≥ 0) (hb : b ≥ 0) (hc : c ≥ 0) (h : a + b + c = sqrt 5) :
  (a ^ 2 - b ^ 2) * (b ^ 2 - c ^ 2) * (c ^ 2 - a ^ 2) ≤ sqrt 5 := by
  sorry


theorem P11 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (h : a + b + c = 3) :
  1 / (3 + a ^ 2 + b ^ 2) + 1 / (3 + b ^ 2 + c ^ 2) + 1 / (3 + c ^ 2 + a ^ 2) ≤ 3 / 5 := by
  sorry
